[project]
name = "anime-backend"
version = "0.1.0"
description = "Python backend service for anime streaming sources (AniWorld & SerienStream)"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    { name = "Anime Backend Team" }
]
keywords = ["anime", "streaming", "fastapi", "webscraping"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "aiofiles>=24.1.0",
    "aiohttp>=3.12.15",
    "beautifulsoup4>=4.13.5",
    "fastapi[standard]>=0.116.1",
    "httpx>=0.28.1",
    "lxml>=6.0.1",
    "pydantic>=2.11.7",
    "python-dateutil>=2.9.0.post0",
    "python-multipart>=0.0.20",
    "pydantic-settings>=2.0.0",
    "regex>=2025.9.1",
    "uvicorn[standard]>=0.35.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.1.0",
    "js2py>=0.74",
    "cryptography>=45.0.7",
    "cloudscraper>=1.2.71",
    "jsbeautifier>=1.15.4",
    "html5lib>=1.1",
    "yt-dlp>=2025.9.5",
    "pytest-cov>=6.3.0",
]

[project.optional-dependencies]
standard = [
    "fastapi>=0.116.1",
]


[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov=app",
    "--cov=lib",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
]
pythonpath = ["src", "app", "lib"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src", "app", "lib"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["lib", "app"]
