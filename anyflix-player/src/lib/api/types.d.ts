/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * API Information
         * @description Get basic API information and available sources.
         */
        get: operations["root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Health Check
         * @description Health check endpoint.
         */
        get: operations["health_check_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sources/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 📋 List Available Sources
         * @description Get all available media sources.
         */
        get: operations["get_sources_sources__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sources/{source}/preferences": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 📋 Get Source Configuration
         * @description Get configuration preferences for a specific source.
         */
        get: operations["get_source_preferences_sources__source__preferences_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sources/{source}/popular": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 🔍 Get Popular Content
         * @description Get popular content with optional metadata enrichment.
         */
        get: operations["get_popular_sources__source__popular_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sources/{source}/latest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 🔍 Get Latest Updates
         * @description Get latest updates with optional metadata enrichment.
         */
        get: operations["get_latest_updates_sources__source__latest_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sources/{source}/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 🔍 Search Content
         * @description Search for content with optional metadata enrichment.
         */
        get: operations["search_content_sources__source__search_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sources/{source}/videos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 🎬 Get Video Streaming Links
         * @description Get video sources.
         */
        get: operations["get_video_sources_sources__source__videos_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sources/trailer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 🎬 Extract Streamable Trailer URL
         * @description Extract streamable URL from AniList or TMDB trailer data.
         *
         *     Takes trailer information from AniList or TMDB responses, builds the full YouTube URL,
         *     and uses ytdlp_extractor to get the actual streamable URL.
         *
         *     Args:
         *         request: TrailerRequest containing either anilist_trailer or tmdb_trailer data
         *
         *     Returns:
         *         TrailerResponse with streamable URL and metadata
         */
        post: operations["extract_trailer_url_sources_trailer_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sources/{source}/series": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 📺 Get Full Series Data
         * @description Get complete series data with hierarchical structure.
         */
        get: operations["get_series_detail_sources__source__series_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sources/{source}/series/seasons": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 📺 Get All Seasons
         * @description Get all seasons for a series.
         */
        get: operations["get_series_seasons_sources__source__series_seasons_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sources/{source}/series/seasons/{season_num}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 📺 Get Specific Season
         * @description Get details for a specific season.
         */
        get: operations["get_series_season_sources__source__series_seasons__season_num__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sources/{source}/series/seasons/{season_num}/episodes/{episode_num}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 📺 Get Specific Episode
         * @description Get details for a specific episode.
         */
        get: operations["get_series_episode_sources__source__series_seasons__season_num__episodes__episode_num__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sources/{source}/series/movies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 📺 Get All Movies/OVAs
         * @description Get all movies, OVAs, and specials for a series.
         */
        get: operations["get_series_movies_sources__source__series_movies_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sources/{source}/series/movies/{movie_num}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 📺 Get Specific Movie/OVA
         * @description Get details for a specific movie, OVA, or special.
         */
        get: operations["get_series_movie_sources__source__series_movies__movie_num__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/sources/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Sources Status
         * @description Get status of all sources.
         */
        get: operations["get_sources_status_admin_sources_status_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/cache/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Cache Stats
         * @description Get cache statistics.
         */
        get: operations["get_cache_stats_admin_cache_stats_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/cache/clear/{prefix}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Clear Cache Prefix
         * @description Clear cache entries with specific prefix.
         *
         *     Args:
         *         prefix: Cache key prefix to clear (e.g., 'anilist_search', 'tmdb_details', 'endpoints:aniworld:*')
         */
        post: operations["clear_cache_prefix_admin_cache_clear__prefix__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/cache/clear/endpoint/{endpoint_path}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Clear Cache Endpoint
         * @description Clear cache entries for a specific endpoint.
         *
         *     Args:
         *         endpoint_path: Endpoint path to clear (e.g., 'aniworld/popular', 'anilist/search')
         */
        post: operations["clear_cache_endpoint_admin_cache_clear_endpoint__endpoint_path__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/cache/flush": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Flush Cache
         * @description Flush all cache entries.
         */
        post: operations["flush_cache_admin_cache_flush_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * AniListDate
         * @description AniList date model.
         */
        AniListDate: {
            /** Year */
            year?: number | null;
            /** Month */
            month?: number | null;
            /** Day */
            day?: number | null;
        };
        /**
         * Character
         * @description Character model.
         */
        Character: {
            /** Id */
            id: number;
            name?: components["schemas"]["CharacterName"] | null;
            image?: components["schemas"]["CharacterImage"] | null;
            /** Description */
            description?: string | null;
            /** Gender */
            gender?: string | null;
            dateOfBirth?: components["schemas"]["AniListDate"] | null;
            /** Age */
            age?: string | null;
            /** Bloodtype */
            bloodType?: string | null;
            /** Isfavourite */
            isFavourite?: boolean | null;
            /** Isfavouriteblocked */
            isFavouriteBlocked?: boolean | null;
            /** Siteurl */
            siteUrl?: string | null;
        };
        /**
         * CharacterConnection
         * @description Character connection model.
         */
        CharacterConnection: {
            /** Edges */
            edges?: components["schemas"]["CharacterEdge"][] | null;
            /** Nodes */
            nodes?: components["schemas"]["Character"][] | null;
        };
        /**
         * CharacterEdge
         * @description Character edge model.
         */
        CharacterEdge: {
            /** Id */
            id?: number | null;
            role?: components["schemas"]["CharacterRole"] | null;
            /** Name */
            name?: string | null;
            /** Voiceactors */
            voiceActors?: components["schemas"]["VoiceActor"][] | null;
            node?: components["schemas"]["Character"] | null;
        };
        /**
         * CharacterImage
         * @description Character image model.
         */
        CharacterImage: {
            /** Large */
            large?: string | null;
            /** Medium */
            medium?: string | null;
        };
        /**
         * CharacterName
         * @description Character name model.
         */
        CharacterName: {
            /** First */
            first?: string | null;
            /** Middle */
            middle?: string | null;
            /** Last */
            last?: string | null;
            /** Full */
            full?: string | null;
            /** Native */
            native?: string | null;
            /** Alternative */
            alternative?: string[] | null;
            /** Alternativespoiler */
            alternativeSpoiler?: string[] | null;
            /** Userpreferred */
            userPreferred?: string | null;
        };
        /**
         * CharacterRole
         * @description Character role enumeration.
         * @enum {string}
         */
        CharacterRole: "MAIN" | "SUPPORTING" | "BACKGROUND";
        /**
         * CoverImage
         * @description Cover image model.
         */
        CoverImage: {
            /** Extralarge */
            extraLarge?: string | null;
            /** Large */
            large?: string | null;
            /** Medium */
            medium?: string | null;
            /** Color */
            color?: string | null;
        };
        /**
         * Episode
         * @description Episode information.
         */
        Episode: {
            /** Season */
            season?: number | null;
            /** Episode */
            episode?: number | null;
            /** Kind */
            kind?: string | null;
            /** Number */
            number?: number | null;
            /** Title */
            title: string;
            /** Name */
            name?: string | null;
            /** Url */
            url: string;
            /** Tags */
            tags?: string[] | null;
        };
        /**
         * EpisodeResponse
         * @description Response for single episode.
         */
        EpisodeResponse: {
            /** Type */
            type: string;
            /** Tmdb Data */
            tmdb_data?: components["schemas"]["TMDBMovieDetail"] | components["schemas"]["TMDBTVDetail"] | null;
            anilist_data?: components["schemas"]["Media"] | null;
            episode: components["schemas"]["Episode"];
        };
        /**
         * ExternalLink
         * @description External link model.
         */
        ExternalLink: {
            /** Id */
            id: number;
            /** Url */
            url?: string | null;
            /** Site */
            site: string;
            /** Siteid */
            siteId?: number | null;
            type?: components["schemas"]["ExternalLinkType"] | null;
            /** Language */
            language?: string | null;
            /** Color */
            color?: string | null;
            /** Icon */
            icon?: string | null;
            /** Notes */
            notes?: string | null;
            /** Isdisabled */
            isDisabled?: boolean | null;
        };
        /**
         * ExternalLinkType
         * @description External link type enumeration.
         * @enum {string}
         */
        ExternalLinkType: "INFO" | "STREAMING" | "SOCIAL";
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * MatchSource
         * @description Match source enumeration.
         * @enum {string}
         */
        MatchSource: "tmdb" | "anilist";
        /**
         * Media
         * @description Main media model.
         */
        Media: {
            /** Id */
            id: number;
            /** Idmal */
            idMal?: number | null;
            title?: components["schemas"]["MediaTitle"] | null;
            type?: components["schemas"]["MediaType"] | null;
            format?: components["schemas"]["MediaFormat"] | null;
            status?: components["schemas"]["MediaStatus"] | null;
            /** Description */
            description?: string | null;
            startDate?: components["schemas"]["AniListDate"] | null;
            endDate?: components["schemas"]["AniListDate"] | null;
            season?: components["schemas"]["MediaSeason"] | null;
            /** Seasonyear */
            seasonYear?: number | null;
            /** Seasonint */
            seasonInt?: number | null;
            /** Episodes */
            episodes?: number | null;
            /** Duration */
            duration?: number | null;
            /** Chapters */
            chapters?: number | null;
            /** Volumes */
            volumes?: number | null;
            /** Countryoforigin */
            countryOfOrigin?: string | null;
            /** Islicensed */
            isLicensed?: boolean | null;
            source?: components["schemas"]["MediaSource"] | null;
            /** Hashtag */
            hashtag?: string | null;
            trailer?: components["schemas"]["Trailer"] | null;
            /** Updatedat */
            updatedAt?: number | null;
            coverImage?: components["schemas"]["CoverImage"] | null;
            /** Bannerimage */
            bannerImage?: string | null;
            /** Genres */
            genres?: string[] | null;
            /** Synonyms */
            synonyms?: string[] | null;
            /** Averagescore */
            averageScore?: number | null;
            /** Meanscore */
            meanScore?: number | null;
            /** Popularity */
            popularity?: number | null;
            /** Islocked */
            isLocked?: boolean | null;
            /** Trending */
            trending?: number | null;
            /** Favourites */
            favourites?: number | null;
            /** Tags */
            tags?: components["schemas"]["MediaTag"][] | null;
            relations?: components["schemas"]["MediaConnection"] | null;
            characters?: components["schemas"]["CharacterConnection"] | null;
            characterPreview?: components["schemas"]["CharacterConnection"] | null;
            staff?: components["schemas"]["StaffConnection"] | null;
            staffPreview?: components["schemas"]["StaffConnection"] | null;
            studios?: components["schemas"]["StudioConnection"] | null;
            /** Isfavourite */
            isFavourite?: boolean | null;
            /** Isfavouriteblocked */
            isFavouriteBlocked?: boolean | null;
            /** Isadult */
            isAdult?: boolean | null;
            nextAiringEpisode?: components["schemas"]["NextAiringEpisode"] | null;
            /** Airingschedule */
            airingSchedule?: unknown | null;
            /** Trends */
            trends?: unknown | null;
            /** Externallinks */
            externalLinks?: components["schemas"]["ExternalLink"][] | null;
            /** Streamingepisodes */
            streamingEpisodes?: components["schemas"]["StreamingEpisode"][] | null;
            /** Rankings */
            rankings?: components["schemas"]["MediaRanking"][] | null;
            mediaListEntry?: components["schemas"]["MediaListEntry"] | null;
            reviews?: components["schemas"]["ReviewConnection"] | null;
            reviewPreview?: components["schemas"]["ReviewConnection"] | null;
            recommendations?: components["schemas"]["RecommendationConnection"] | null;
            stats?: components["schemas"]["MediaStats"] | null;
            /** Siteurl */
            siteUrl?: string | null;
            /** Autocreateforumthread */
            autoCreateForumThread?: boolean | null;
            /** Isrecommendationblocked */
            isRecommendationBlocked?: boolean | null;
            /** Isreviewblocked */
            isReviewBlocked?: boolean | null;
            /** Modnotes */
            modNotes?: string | null;
        };
        /**
         * MediaConnection
         * @description Media connection model.
         */
        MediaConnection: {
            /** Edges */
            edges?: components["schemas"]["MediaEdge"][] | null;
            /** Nodes */
            nodes?: components["schemas"]["Media"][] | null;
            pageInfo?: components["schemas"]["PageInfo"] | null;
        };
        /**
         * MediaEdge
         * @description Media edge model.
         */
        MediaEdge: {
            /** Id */
            id?: number | null;
            relationType?: components["schemas"]["RelationType"] | null;
            /** Ismainstudio */
            isMainStudio?: boolean | null;
            /** Characters */
            characters?: components["schemas"]["Character"][] | null;
            characterRole?: components["schemas"]["CharacterRole"] | null;
            /** Charactername */
            characterName?: string | null;
            /** Rolenotes */
            roleNotes?: string | null;
            /** Dubgroup */
            dubGroup?: string | null;
            /** Staffrole */
            staffRole?: string | null;
            /** Voiceactors */
            voiceActors?: components["schemas"]["VoiceActor"][] | null;
            /** Voiceactorroles */
            voiceActorRoles?: unknown[] | null;
            node?: components["schemas"]["Media"] | null;
        };
        /**
         * MediaFormat
         * @description Media format enumeration.
         * @enum {string}
         */
        MediaFormat: "TV" | "TV_SHORT" | "MOVIE" | "SPECIAL" | "OVA" | "ONA" | "MUSIC" | "MANGA" | "NOVEL" | "ONE_SHOT";
        /**
         * MediaInfo
         * @description Detailed Media information.
         */
        MediaInfo: {
            /** Name */
            name: string;
            /** Cover Image Url */
            cover_image_url: string;
            /** Description */
            description: string;
            /**
             * Author
             * @default
             */
            author: string;
            /** Genres */
            genres?: string[];
            /** Episodes */
            episodes?: components["schemas"]["Episode"][];
            /**
             * Seasons Length
             * @description Number of episodes
             */
            seasons_length?: number | null;
            /**
             * Alternative Titles
             * @description Alternative titles in different languages
             */
            alternative_titles?: string[];
            /**
             * Start Year
             * @description Start year of the series
             */
            start_year?: number | null;
            /**
             * End Year
             * @description End year of the series
             */
            end_year?: number | null;
            /**
             * Fsk Rating
             * @description FSK age rating (German rating system)
             */
            fsk_rating?: number | null;
            /**
             * Imdb Id
             * @description IMDB ID (e.g., 'tt36469298')
             */
            imdb_id?: string | null;
            /**
             * Country Of Origin
             * @description Country of origin
             */
            country_of_origin?: string | null;
            /**
             * Main Genre
             * @description Primary genre classification
             */
            main_genre?: string | null;
            /**
             * Directors
             * @description List of directors
             */
            directors?: string[];
            /**
             * Actors
             * @description List of main actors
             */
            actors?: string[];
            /**
             * Producers
             * @description List of production companies
             */
            producers?: string[];
            /**
             * Backdrop Url
             * @description Backdrop/banner image URL
             */
            backdrop_url?: string | null;
            /**
             * Series Id
             * @description Internal series ID from the provider
             */
            series_id?: string | null;
        };
        /**
         * MediaListEntry
         * @description Media list entry model.
         */
        MediaListEntry: {
            /** Id */
            id: number;
            status?: components["schemas"]["MediaListStatus"] | null;
            /** Score */
            score?: number | null;
            /** Progress */
            progress?: number | null;
            /** Progressvolumes */
            progressVolumes?: number | null;
            /** Repeat */
            repeat?: number | null;
            /** Priority */
            priority?: number | null;
            /** Private */
            private?: boolean | null;
            /** Notes */
            notes?: string | null;
            /** Hiddenfromstatuslists */
            hiddenFromStatusLists?: boolean | null;
            /** Customlists */
            customLists?: {
                [key: string]: unknown;
            } | null;
            /** Advancedscores */
            advancedScores?: {
                [key: string]: unknown;
            } | null;
            startedAt?: components["schemas"]["AniListDate"] | null;
            completedAt?: components["schemas"]["AniListDate"] | null;
            /** Updatedat */
            updatedAt?: number | null;
            /** Createdat */
            createdAt?: number | null;
        };
        /**
         * MediaListStatus
         * @description Media list status enumeration.
         * @enum {string}
         */
        MediaListStatus: "CURRENT" | "PLANNING" | "COMPLETED" | "DROPPED" | "PAUSED" | "REPEATING";
        /**
         * MediaRanking
         * @description Media ranking model.
         */
        MediaRanking: {
            /** Id */
            id: number;
            /** Rank */
            rank: number;
            type: components["schemas"]["RankingType"];
            format: components["schemas"]["MediaFormat"];
            /** Year */
            year?: number | null;
            season?: components["schemas"]["MediaSeason"] | null;
            /** Alltime */
            allTime?: boolean | null;
            /** Context */
            context: string;
        };
        /**
         * MediaRecommendation
         * @description Media recommendation model.
         */
        MediaRecommendation: {
            /** Id */
            id: number;
            title?: components["schemas"]["MediaTitle"] | null;
            format?: components["schemas"]["MediaFormat"] | null;
            type?: components["schemas"]["MediaType"] | null;
            status?: components["schemas"]["MediaStatus"] | null;
            /** Bannerimage */
            bannerImage?: string | null;
            coverImage?: components["schemas"]["CoverImage"] | null;
            /** Siteurl */
            siteUrl?: string | null;
        };
        /**
         * MediaSeason
         * @description Media season enumeration.
         * @enum {string}
         */
        MediaSeason: "WINTER" | "SPRING" | "SUMMER" | "FALL";
        /**
         * MediaSource
         * @description Media source enumeration.
         * @enum {string}
         */
        MediaSource: "ORIGINAL" | "MANGA" | "LIGHT_NOVEL" | "VISUAL_NOVEL" | "VIDEO_GAME" | "OTHER" | "NOVEL" | "DOUJINSHI" | "ANIME" | "WEB_NOVEL" | "LIVE_ACTION" | "GAME" | "COMIC" | "MULTIMEDIA_PROJECT" | "PICTURE_BOOK";
        /**
         * MediaStats
         * @description Media statistics model.
         */
        MediaStats: {
            /** Statusdistribution */
            statusDistribution?: components["schemas"]["StatusDistribution"][] | null;
            /** Scoredistribution */
            scoreDistribution?: components["schemas"]["ScoreDistribution"][] | null;
        };
        /**
         * MediaStatus
         * @description Media status enumeration.
         * @enum {string}
         */
        MediaStatus: "FINISHED" | "RELEASING" | "NOT_YET_RELEASED" | "CANCELLED" | "HIATUS";
        /**
         * MediaTag
         * @description Media tag model.
         */
        MediaTag: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Category */
            category?: string | null;
            /** Rank */
            rank?: number | null;
            /** Isgeneralspoiler */
            isGeneralSpoiler?: boolean | null;
            /** Ismediaspoiler */
            isMediaSpoiler?: boolean | null;
            /** Isadult */
            isAdult?: boolean | null;
            /** Userid */
            userId?: number | null;
        };
        /**
         * MediaTitle
         * @description Media title model.
         */
        MediaTitle: {
            /** Romaji */
            romaji?: string | null;
            /** English */
            english?: string | null;
            /** Native */
            native?: string | null;
            /** Userpreferred */
            userPreferred?: string | null;
        };
        /**
         * MediaType
         * @description Media type enumeration.
         * @enum {string}
         */
        MediaType: "ANIME" | "MANGA";
        /**
         * Movie
         * @description Movie/OVA/Special information.
         */
        Movie: {
            /** Number */
            number: number;
            /** Title */
            title: string;
            kind: components["schemas"]["MovieKind"];
            /** Url */
            url: string;
            /** Date Upload */
            date_upload?: string | null;
            /** Tags */
            tags?: string[];
        };
        /**
         * MovieKind
         * @description Movie kind enumeration.
         * @enum {string}
         */
        MovieKind: "movie" | "ova" | "special";
        /**
         * MovieResponse
         * @description Response for single movie.
         */
        MovieResponse: {
            /** Type */
            type: string;
            movie: components["schemas"]["Movie"];
            /** Tmdb Data */
            tmdb_data?: components["schemas"]["TMDBMovieDetail"] | components["schemas"]["TMDBTVDetail"] | null;
            anilist_data?: components["schemas"]["Media"] | null;
            /** Match Confidence */
            match_confidence?: number | null;
        };
        /**
         * MoviesResponse
         * @description Response for movies list.
         */
        MoviesResponse: {
            /** Type */
            type: string;
            /** Movies */
            movies: components["schemas"]["Movie"][];
            /** Tmdb Data */
            tmdb_data?: components["schemas"]["TMDBMovieDetail"] | components["schemas"]["TMDBTVDetail"] | null;
            anilist_data?: components["schemas"]["Media"] | null;
            /** Match Confidence */
            match_confidence?: number | null;
        };
        /**
         * NextAiringEpisode
         * @description Next airing episode model.
         */
        NextAiringEpisode: {
            /** Airingat */
            airingAt?: number | null;
            /** Timeuntilairing */
            timeUntilAiring?: number | null;
            /** Episode */
            episode?: number | null;
        };
        /**
         * PageInfo
         * @description Page info model.
         */
        PageInfo: {
            /** Total */
            total?: number | null;
            /** Perpage */
            perPage?: number | null;
            /** Currentpage */
            currentPage?: number | null;
            /** Lastpage */
            lastPage?: number | null;
            /** Hasnextpage */
            hasNextPage?: boolean | null;
        };
        /** PaginatedResponse[SearchResult] */
        PaginatedResponse_SearchResult_: {
            /** Type */
            type: string;
            /** List */
            list: components["schemas"]["SearchResult"][];
            /**
             * Has Next Page
             * @default false
             */
            has_next_page: boolean;
        };
        /**
         * PreferencesResponse
         * @description Response for source preferences/configuration.
         */
        PreferencesResponse: {
            /**
             * Preferences
             * @description Source configuration preferences
             */
            preferences: {
                [key: string]: unknown;
            };
        };
        /**
         * RankingType
         * @description Ranking type enumeration.
         * @enum {string}
         */
        RankingType: "RATED" | "POPULAR";
        /**
         * Recommendation
         * @description Recommendation model.
         */
        Recommendation: {
            /** Id */
            id: number;
            /** Rating */
            rating?: number | null;
            /** Userrating */
            userRating?: number | string | null;
            mediaRecommendation?: components["schemas"]["MediaRecommendation"] | null;
            user?: components["schemas"]["User"] | null;
        };
        /**
         * RecommendationConnection
         * @description Recommendation connection model.
         */
        RecommendationConnection: {
            /** Edges */
            edges?: unknown[] | null;
            /** Nodes */
            nodes?: components["schemas"]["Recommendation"][] | null;
            pageInfo?: components["schemas"]["PageInfo"] | null;
        };
        /**
         * RelationType
         * @description Relation type enumeration.
         * @enum {string}
         */
        RelationType: "ADAPTATION" | "PREQUEL" | "SEQUEL" | "PARENT" | "SIDE_STORY" | "CHARACTER" | "SUMMARY" | "ALTERNATIVE" | "SPIN_OFF" | "OTHER" | "SOURCE" | "COMPILATION" | "CONTAINS";
        /**
         * Review
         * @description Review model.
         */
        Review: {
            /** Id */
            id: number;
            /** Userid */
            userId?: number | null;
            /** Mediaid */
            mediaId?: number | null;
            mediaType?: components["schemas"]["MediaType"] | null;
            /** Summary */
            summary?: string | null;
            /** Body */
            body?: string | null;
            /** Rating */
            rating?: number | null;
            /** Ratingamount */
            ratingAmount?: number | null;
            /** Userrating */
            userRating?: number | null;
            /** Score */
            score?: number | null;
            /** Private */
            private?: boolean | null;
            /** Siteurl */
            siteUrl?: string | null;
            /** Createdat */
            createdAt?: number | null;
            /** Updatedat */
            updatedAt?: number | null;
            user?: components["schemas"]["User"] | null;
        };
        /**
         * ReviewConnection
         * @description Review connection model.
         */
        ReviewConnection: {
            /** Edges */
            edges?: unknown[] | null;
            /** Nodes */
            nodes?: components["schemas"]["Review"][] | null;
            pageInfo?: components["schemas"]["PageInfo"] | null;
        };
        /**
         * ScoreDistribution
         * @description Score distribution model.
         */
        ScoreDistribution: {
            /** Score */
            score?: number | null;
            /** Amount */
            amount?: number | null;
        };
        /**
         * SearchResult
         * @description Search result item.
         */
        SearchResult: {
            /** Name */
            name: string;
            /** Image Url */
            image_url: string;
            /** Link */
            link: string;
            media_info?: components["schemas"]["MediaInfo"] | null;
            /** Best Match */
            best_match?: components["schemas"]["TMDBSearchResult"] | components["schemas"]["Media"] | null;
            best_match_source?: components["schemas"]["MatchSource"] | null;
            /** Confidence */
            confidence?: number | null;
        };
        /**
         * Season
         * @description Season information.
         */
        Season: {
            /** Season */
            season: number;
            /** Title */
            title?: string | null;
            /** Episodes */
            episodes?: components["schemas"]["Episode"][];
        };
        /**
         * SeasonResponse
         * @description Response for single season.
         */
        SeasonResponse: {
            /** Type */
            type: string;
            /** Tmdb Data */
            tmdb_data?: components["schemas"]["TMDBMovieDetail"] | components["schemas"]["TMDBTVDetail"] | null;
            anilist_data?: components["schemas"]["Media"] | null;
            season: components["schemas"]["Season"];
        };
        /**
         * SeasonsResponse
         * @description Response for seasons list.
         */
        SeasonsResponse: {
            /** Type */
            type: string;
            /** Seasons */
            seasons: components["schemas"]["Season"][];
            /** Tmdb Data */
            tmdb_data?: components["schemas"]["TMDBMovieDetail"] | components["schemas"]["TMDBTVDetail"] | null;
            anilist_data?: components["schemas"]["Media"] | null;
            /** Match Confidence */
            match_confidence?: number | null;
        };
        /**
         * SeriesDetail
         * @description Hierarchical series detail with seasons and movies.
         */
        SeriesDetail: {
            /** Slug */
            slug: string;
            /** Seasons */
            seasons?: components["schemas"]["Season"][];
            /** Movies */
            movies?: components["schemas"]["Movie"][];
        };
        /**
         * SeriesDetailResponse
         * @description Response for hierarchical series detail.
         */
        SeriesDetailResponse: {
            /** Type */
            type: string;
            /** Tmdb Data */
            tmdb_data?: components["schemas"]["TMDBMovieDetail"] | components["schemas"]["TMDBTVDetail"] | null;
            anilist_data?: components["schemas"]["Media"] | null;
            /** Match Confidence */
            match_confidence?: number | null;
            /** Length */
            length?: number | null;
            series: components["schemas"]["SeriesDetail"];
        };
        /**
         * SourcesResponse
         * @description Response for available sources list.
         */
        SourcesResponse: {
            /**
             * Sources
             * @description List of available source names
             */
            sources: string[];
        };
        /**
         * Staff
         * @description Staff model.
         */
        Staff: {
            /** Id */
            id: number;
            name?: components["schemas"]["StaffName"] | null;
            /** Languagev2 */
            languageV2?: string | null;
            image?: components["schemas"]["StaffImage"] | null;
            /** Description */
            description?: string | null;
            /** Primaryoccupations */
            primaryOccupations?: string[] | null;
            /** Gender */
            gender?: string | null;
            dateOfBirth?: components["schemas"]["AniListDate"] | null;
            dateOfDeath?: components["schemas"]["AniListDate"] | null;
            /** Age */
            age?: number | null;
            /** Yearsactive */
            yearsActive?: number[] | null;
            /** Hometown */
            homeTown?: string | null;
            /** Bloodtype */
            bloodType?: string | null;
            /** Isfavourite */
            isFavourite?: boolean | null;
            /** Isfavouriteblocked */
            isFavouriteBlocked?: boolean | null;
            /** Siteurl */
            siteUrl?: string | null;
        };
        /**
         * StaffConnection
         * @description Staff connection model.
         */
        StaffConnection: {
            /** Edges */
            edges?: components["schemas"]["StaffEdge"][] | null;
            /** Nodes */
            nodes?: components["schemas"]["Staff"][] | null;
        };
        /**
         * StaffEdge
         * @description Staff edge model.
         */
        StaffEdge: {
            /** Id */
            id?: number | null;
            /** Role */
            role?: string | null;
            node?: components["schemas"]["Staff"] | null;
        };
        /**
         * StaffImage
         * @description Staff image model.
         */
        StaffImage: {
            /** Large */
            large?: string | null;
            /** Medium */
            medium?: string | null;
        };
        /**
         * StaffName
         * @description Staff name model.
         */
        StaffName: {
            /** First */
            first?: string | null;
            /** Middle */
            middle?: string | null;
            /** Last */
            last?: string | null;
            /** Full */
            full?: string | null;
            /** Native */
            native?: string | null;
            /** Alternative */
            alternative?: string[] | null;
            /** Userpreferred */
            userPreferred?: string | null;
        };
        /**
         * StatusDistribution
         * @description Status distribution model.
         */
        StatusDistribution: {
            status?: components["schemas"]["MediaListStatus"] | null;
            /** Amount */
            amount?: number | null;
        };
        /**
         * StreamingEpisode
         * @description Streaming episode model.
         */
        StreamingEpisode: {
            /** Title */
            title?: string | null;
            /** Thumbnail */
            thumbnail?: string | null;
            /** Url */
            url?: string | null;
            /** Site */
            site?: string | null;
        };
        /**
         * Studio
         * @description Studio model.
         */
        Studio: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Isanimationstudio */
            isAnimationStudio?: boolean | null;
            /** Siteurl */
            siteUrl?: string | null;
            /** Isfavourite */
            isFavourite?: boolean | null;
        };
        /**
         * StudioConnection
         * @description Studio connection model.
         */
        StudioConnection: {
            /** Edges */
            edges?: components["schemas"]["StudioEdge"][] | null;
            /** Nodes */
            nodes?: components["schemas"]["Studio"][] | null;
        };
        /**
         * StudioEdge
         * @description Studio edge model.
         */
        StudioEdge: {
            /** Id */
            id?: number | null;
            /** Ismain */
            isMain: boolean;
            node?: components["schemas"]["Studio"] | null;
        };
        /**
         * TMDBCreatedBy
         * @description TMDB created by person.
         */
        TMDBCreatedBy: {
            /** Id */
            id: number;
            /** Credit Id */
            credit_id: string;
            /** Name */
            name: string;
            /** Gender */
            gender: number;
            /** Profile Path */
            profile_path?: string | null;
        };
        /**
         * TMDBEpisode
         * @description TMDB episode model.
         */
        TMDBEpisode: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Overview */
            overview: string;
            /** Vote Average */
            vote_average: number;
            /** Vote Count */
            vote_count: number;
            /** Air Date */
            air_date?: string | null;
            /** Episode Number */
            episode_number: number;
            /** Episode Type */
            episode_type: string;
            /** Production Code */
            production_code: string;
            /** Runtime */
            runtime?: number | null;
            /** Season Number */
            season_number: number;
            /** Show Id */
            show_id: number;
            /** Still Path */
            still_path?: string | null;
        };
        /**
         * TMDBExternalIds
         * @description TMDB external IDs.
         */
        TMDBExternalIds: {
            /** Imdb Id */
            imdb_id?: string | null;
            /** Freebase Mid */
            freebase_mid?: string | null;
            /** Freebase Id */
            freebase_id?: string | null;
            /** Tvdb Id */
            tvdb_id?: number | null;
            /** Tvrage Id */
            tvrage_id?: number | null;
            /** Wikidata Id */
            wikidata_id?: string | null;
            /** Facebook Id */
            facebook_id?: string | null;
            /** Instagram Id */
            instagram_id?: string | null;
            /** Twitter Id */
            twitter_id?: string | null;
        };
        /**
         * TMDBGenre
         * @description TMDB genre model.
         */
        TMDBGenre: {
            /** Id */
            id: number;
            /** Name */
            name: string;
        };
        /**
         * TMDBImage
         * @description TMDB image model.
         */
        TMDBImage: {
            /** Aspect Ratio */
            aspect_ratio: number;
            /** Height */
            height: number;
            /** Iso 639 1 */
            iso_639_1?: string | null;
            /** File Path */
            file_path: string;
            /** Vote Average */
            vote_average: number;
            /** Vote Count */
            vote_count: number;
            /** Width */
            width: number;
        };
        /**
         * TMDBImages
         * @description TMDB images collection.
         */
        TMDBImages: {
            /** Backdrops */
            backdrops?: components["schemas"]["TMDBImage"][];
            /** Logos */
            logos?: components["schemas"]["TMDBImage"][];
            /** Posters */
            posters?: components["schemas"]["TMDBImage"][];
        };
        /**
         * TMDBMovieDetail
         * @description TMDB movie detail model.
         */
        TMDBMovieDetail: {
            /** Adult */
            adult: boolean;
            /** Backdrop Path */
            backdrop_path?: string | null;
            /** Belongs To Collection */
            belongs_to_collection?: {
                [key: string]: unknown;
            } | null;
            /** Budget */
            budget: number;
            /** Genres */
            genres?: components["schemas"]["TMDBGenre"][];
            /** Homepage */
            homepage?: string | null;
            /** Id */
            id: number;
            /** Imdb Id */
            imdb_id?: string | null;
            /** Original Language */
            original_language: string;
            /** Original Title */
            original_title: string;
            /** Overview */
            overview?: string | null;
            /** Popularity */
            popularity: number;
            /** Poster Path */
            poster_path?: string | null;
            /** Production Companies */
            production_companies?: components["schemas"]["TMDBProductionCompany"][];
            /** Production Countries */
            production_countries?: components["schemas"]["TMDBProductionCountry"][];
            /** Release Date */
            release_date?: string | null;
            /** Revenue */
            revenue: number;
            /** Runtime */
            runtime?: number | null;
            /** Spoken Languages */
            spoken_languages?: components["schemas"]["TMDBSpokenLanguage"][];
            /** Status */
            status: string;
            /** Tagline */
            tagline?: string | null;
            /** Title */
            title: string;
            /** Video */
            video: boolean;
            /** Vote Average */
            vote_average: number;
            /** Vote Count */
            vote_count: number;
            /** Videos */
            videos?: {
                [key: string]: components["schemas"]["TMDBVideo"][];
            } | null;
            images?: components["schemas"]["TMDBImages"] | null;
            external_ids?: components["schemas"]["TMDBExternalIds"] | null;
        };
        /**
         * TMDBNetwork
         * @description TMDB network model.
         */
        TMDBNetwork: {
            /** Id */
            id: number;
            /** Logo Path */
            logo_path?: string | null;
            /** Name */
            name: string;
            /** Origin Country */
            origin_country: string;
        };
        /**
         * TMDBProductionCompany
         * @description TMDB production company model.
         */
        TMDBProductionCompany: {
            /** Id */
            id: number;
            /** Logo Path */
            logo_path?: string | null;
            /** Name */
            name: string;
            /** Origin Country */
            origin_country: string;
        };
        /**
         * TMDBProductionCountry
         * @description TMDB production country model.
         */
        TMDBProductionCountry: {
            /** Iso 3166 1 */
            iso_3166_1: string;
            /** Name */
            name: string;
        };
        /**
         * TMDBSearchResult
         * @description TMDB search result model.
         */
        TMDBSearchResult: {
            /** Id */
            id: number;
            /** Media Type */
            media_type: string;
            /** Adult */
            adult?: boolean | null;
            /** Backdrop Path */
            backdrop_path?: string | null;
            /** Poster Path */
            poster_path?: string | null;
            /**
             * Popularity
             * @default 0
             */
            popularity: number;
            /** Vote Average */
            vote_average?: number | null;
            /** Vote Count */
            vote_count?: number | null;
            /** Overview */
            overview?: string | null;
            /** Genre Ids */
            genre_ids?: number[];
            /** Original Language */
            original_language?: string | null;
            /** Title */
            title?: string | null;
            /** Original Title */
            original_title?: string | null;
            /** Release Date */
            release_date?: string | null;
            /** Video */
            video?: boolean | null;
            /** Name */
            name?: string | null;
            /** Original Name */
            original_name?: string | null;
            /** First Air Date */
            first_air_date?: string | null;
            /** Origin Country */
            origin_country?: string[];
            /** Profile Path */
            profile_path?: string | null;
            /** Known For */
            known_for?: {
                [key: string]: unknown;
            }[];
            /** Known For Department */
            known_for_department?: string | null;
            /** Gender */
            gender?: number | null;
        };
        /**
         * TMDBSeason
         * @description TMDB season model.
         */
        TMDBSeason: {
            /** Air Date */
            air_date?: string | null;
            /** Episode Count */
            episode_count: number;
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Overview */
            overview: string;
            /** Poster Path */
            poster_path?: string | null;
            /** Season Number */
            season_number: number;
            /** Vote Average */
            vote_average: number;
        };
        /**
         * TMDBSpokenLanguage
         * @description TMDB spoken language model.
         */
        TMDBSpokenLanguage: {
            /** English Name */
            english_name: string;
            /** Iso 639 1 */
            iso_639_1: string;
            /** Name */
            name: string;
        };
        /**
         * TMDBTVDetail
         * @description TMDB TV show detail model.
         */
        TMDBTVDetail: {
            /** Adult */
            adult: boolean;
            /** Backdrop Path */
            backdrop_path?: string | null;
            /** Created By */
            created_by?: components["schemas"]["TMDBCreatedBy"][];
            /** Episode Run Time */
            episode_run_time?: number[];
            /** First Air Date */
            first_air_date?: string | null;
            /** Genres */
            genres?: components["schemas"]["TMDBGenre"][];
            /** Homepage */
            homepage: string;
            /** Id */
            id: number;
            /** In Production */
            in_production: boolean;
            /** Languages */
            languages?: string[];
            /** Last Air Date */
            last_air_date?: string | null;
            last_episode_to_air?: components["schemas"]["TMDBEpisode"] | null;
            /** Name */
            name: string;
            /** Networks */
            networks?: components["schemas"]["TMDBNetwork"][];
            next_episode_to_air?: components["schemas"]["TMDBEpisode"] | null;
            /** Number Of Episodes */
            number_of_episodes: number;
            /** Number Of Seasons */
            number_of_seasons: number;
            /** Origin Country */
            origin_country?: string[];
            /** Original Language */
            original_language: string;
            /** Original Name */
            original_name: string;
            /** Overview */
            overview: string;
            /** Popularity */
            popularity: number;
            /** Poster Path */
            poster_path?: string | null;
            /** Production Companies */
            production_companies?: components["schemas"]["TMDBProductionCompany"][];
            /** Production Countries */
            production_countries?: components["schemas"]["TMDBProductionCountry"][];
            /** Seasons */
            seasons?: components["schemas"]["TMDBSeason"][];
            /** Spoken Languages */
            spoken_languages?: components["schemas"]["TMDBSpokenLanguage"][];
            /** Status */
            status: string;
            /** Tagline */
            tagline: string;
            /** Type */
            type: string;
            /** Vote Average */
            vote_average: number;
            /** Vote Count */
            vote_count: number;
            /** Videos */
            videos?: {
                [key: string]: components["schemas"]["TMDBVideo"][];
            } | null;
            images?: components["schemas"]["TMDBImages"] | null;
            external_ids?: components["schemas"]["TMDBExternalIds"] | null;
        };
        /**
         * TMDBVideo
         * @description TMDB video model.
         */
        TMDBVideo: {
            /** Iso 639 1 */
            iso_639_1: string;
            /** Iso 3166 1 */
            iso_3166_1: string;
            /** Name */
            name: string;
            /** Key */
            key: string;
            /** Site */
            site: string;
            /** Size */
            size: number;
            /** Type */
            type: string;
            /** Official */
            official: boolean;
            /** Published At */
            published_at: string;
            /** Id */
            id: string;
        };
        /**
         * Trailer
         * @description Trailer model.
         */
        Trailer: {
            /** Id */
            id?: string | null;
            /** Site */
            site?: string | null;
            /** Thumbnail */
            thumbnail?: string | null;
        };
        /**
         * TrailerRequest
         * @description Request model for trailer extraction.
         */
        TrailerRequest: {
            /** Anilist Trailer */
            anilist_trailer?: {
                [key: string]: unknown;
            } | null;
            /** Tmdb Trailer */
            tmdb_trailer?: {
                [key: string]: unknown;
            } | null;
        };
        /**
         * TrailerResponse
         * @description Response for trailer extraction.
         */
        TrailerResponse: {
            /** Success */
            success: boolean;
            /** Original Url */
            original_url: string;
            /** Streamable Url */
            streamable_url?: string | null;
            /** Quality */
            quality?: string | null;
            /** Site */
            site?: string | null;
            /** Error */
            error?: string | null;
        };
        /**
         * User
         * @description User model.
         */
        User: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            avatar?: components["schemas"]["UserAvatar"] | null;
            /** Bannerimage */
            bannerImage?: string | null;
            /** About */
            about?: string | null;
            /** Isfollowing */
            isFollowing?: boolean | null;
            /** Isfollower */
            isFollower?: boolean | null;
            /** Isblocked */
            isBlocked?: boolean | null;
            /** Bans */
            bans?: unknown[] | null;
            /** Options */
            options?: {
                [key: string]: unknown;
            } | null;
            /** Medialistoptions */
            mediaListOptions?: {
                [key: string]: unknown;
            } | null;
            /** Favourites */
            favourites?: {
                [key: string]: unknown;
            } | null;
            /** Statistics */
            statistics?: {
                [key: string]: unknown;
            } | null;
            /** Unreadnotificationcount */
            unreadNotificationCount?: number | null;
            /** Siteurl */
            siteUrl?: string | null;
            /** Donatortier */
            donatorTier?: number | null;
            /** Donatorbadge */
            donatorBadge?: string | null;
            /** Moderatorroles */
            moderatorRoles?: string[] | null;
            /** Createdat */
            createdAt?: number | null;
            /** Updatedat */
            updatedAt?: number | null;
        };
        /**
         * UserAvatar
         * @description User avatar model.
         */
        UserAvatar: {
            /** Large */
            large?: string | null;
            /** Medium */
            medium?: string | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /**
         * VideoListResponse
         * @description Response for video sources.
         */
        VideoListResponse: {
            /** Type */
            type: string;
            /** Videos */
            videos: components["schemas"]["VideoSource"][];
        };
        /**
         * VideoSource
         * @description Video source information.
         */
        VideoSource: {
            /** Url */
            url: string;
            /** Original Url */
            original_url: string;
            /** Quality */
            quality: string;
            /** Language */
            language?: string | null;
            /** Type */
            type?: string | null;
            /** Host */
            host?: string | null;
            /**
             * Requires Proxy
             * @default false
             */
            requires_proxy: boolean;
            /** Headers */
            headers?: {
                [key: string]: string;
            } | null;
            /** Subtitles */
            subtitles?: {
                [key: string]: string;
            }[] | null;
            /** Audios */
            audios?: {
                [key: string]: string;
            }[] | null;
        };
        /**
         * VoiceActor
         * @description Voice actor model.
         */
        VoiceActor: {
            /** Id */
            id: number;
            name?: components["schemas"]["StaffName"] | null;
            /** Language */
            language?: string | null;
            /** Languagev2 */
            languageV2?: string | null;
            image?: components["schemas"]["StaffImage"] | null;
            /** Description */
            description?: string | null;
            /** Primaryoccupations */
            primaryOccupations?: string[] | null;
            /** Gender */
            gender?: string | null;
            dateOfBirth?: components["schemas"]["AniListDate"] | null;
            dateOfDeath?: components["schemas"]["AniListDate"] | null;
            /** Age */
            age?: number | null;
            /** Yearsactive */
            yearsActive?: number[] | null;
            /** Hometown */
            homeTown?: string | null;
            /** Bloodtype */
            bloodType?: string | null;
            /** Isfavourite */
            isFavourite?: boolean | null;
            /** Isfavouriteblocked */
            isFavouriteBlocked?: boolean | null;
            /** Siteurl */
            siteUrl?: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved API information */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "message": "Anime Backend Service",
                     *       "version": "1.0.0",
                     *       "available_sources": [
                     *         "aniworld",
                     *         "serienstream"
                     *       ],
                     *       "api_docs": "/docs",
                     *       "openapi_schema": "/openapi.json"
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    health_check_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_sources_sources__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SourcesResponse"];
                };
            };
            /** @description Source not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_source_preferences_sources__source__preferences_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                source: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PreferencesResponse"];
                };
            };
            /** @description Source not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_popular_sources__source__popular_get: {
        parameters: {
            query?: {
                page?: number;
            };
            header?: never;
            path: {
                source: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_SearchResult_"];
                };
            };
            /** @description Source not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_latest_updates_sources__source__latest_get: {
        parameters: {
            query?: {
                page?: number;
            };
            header?: never;
            path: {
                source: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_SearchResult_"];
                };
            };
            /** @description Source not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    search_content_sources__source__search_get: {
        parameters: {
            query: {
                q: string;
                page?: number;
                lang?: string;
            };
            header?: never;
            path: {
                source: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_SearchResult_"];
                };
            };
            /** @description Source not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_video_sources_sources__source__videos_get: {
        parameters: {
            query: {
                url: string;
                lang?: string;
            };
            header?: never;
            path: {
                source: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VideoListResponse"];
                };
            };
            /** @description Source not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    extract_trailer_url_sources_trailer_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TrailerRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrailerResponse"];
                };
            };
            /** @description Source not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_series_detail_sources__source__series_get: {
        parameters: {
            query: {
                url: string;
            };
            header?: never;
            path: {
                source: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SeriesDetailResponse"];
                };
            };
            /** @description Source not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_series_seasons_sources__source__series_seasons_get: {
        parameters: {
            query: {
                url: string;
            };
            header?: never;
            path: {
                source: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SeasonsResponse"];
                };
            };
            /** @description Source not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_series_season_sources__source__series_seasons__season_num__get: {
        parameters: {
            query: {
                url: string;
            };
            header?: never;
            path: {
                source: string;
                season_num: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SeasonResponse"];
                };
            };
            /** @description Source not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_series_episode_sources__source__series_seasons__season_num__episodes__episode_num__get: {
        parameters: {
            query: {
                url: string;
            };
            header?: never;
            path: {
                source: string;
                season_num: number;
                episode_num: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EpisodeResponse"];
                };
            };
            /** @description Source not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_series_movies_sources__source__series_movies_get: {
        parameters: {
            query: {
                url: string;
            };
            header?: never;
            path: {
                source: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MoviesResponse"];
                };
            };
            /** @description Source not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_series_movie_sources__source__series_movies__movie_num__get: {
        parameters: {
            query: {
                url: string;
            };
            header?: never;
            path: {
                source: string;
                movie_num: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MovieResponse"];
                };
            };
            /** @description Source not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_sources_status_admin_sources_status_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_cache_stats_admin_cache_stats_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
        };
    };
    clear_cache_prefix_admin_cache_clear__prefix__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                prefix: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    clear_cache_endpoint_admin_cache_clear_endpoint__endpoint_path__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                endpoint_path: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    flush_cache_admin_cache_flush_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
        };
    };
}
