{
  "openapi": "3.1.0",
  "info": {
    "title": "Media Streaming Backend Service",
    "description": "\n    **Python backend service for media streaming sources** \ud83c\udfac\n\n    Complete media streaming API providing access to content from multiple streaming sources \n    with a modern, logically organized structure. Currently supports anime content from German sources\n    including AniWorld and SerienStream, with extensible architecture for other media types.\n\n    ## \ud83c\udfac Media API Structure\n\n    ### \ud83d\udccb Source Management\n    - List available streaming sources and their configurations\n    - Get source-specific preferences and settings\n\n    ### \ud83d\udd0d Content Discovery  \n    - Browse popular content rankings\n    - Get latest updates and new releases\n    - Search content by title with filtering\n\n    ### \ud83d\udcfa Series Structure\n    - Complete hierarchical content organization\n    - Season and episode management\n    - Movies, specials, and additional content\n    - Granular access to specific content items\n\n    ### \ud83c\udfac Video Sources\n    - Extract streaming links from 10+ hosting providers\n    - Multiple quality options and language preferences\n    - Built-in proxy support for CORS handling\n\n    ## \u26a1 Quick Start\n    1. **Discover**: `/sources/{source}/search?q=content-title`\n    2. **Structure**: `/sources/{source}/series?url=...`  \n    3. **Stream**: `/sources/{source}/videos?url=...`\n    ",
    "contact": {
      "name": "Media Streaming Backend API",
      "url": "https://github.com/your-repo/media-backend"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "media-api"
        ],
        "summary": "API Information",
        "description": "Get basic API information and available sources.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successfully retrieved API information",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "message": "Anime Backend Service",
                  "version": "1.0.0",
                  "available_sources": [
                    "aniworld",
                    "serienstream"
                  ],
                  "api_docs": "/docs",
                  "openapi_schema": "/openapi.json"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/sources/": {
      "get": {
        "tags": [
          "media-api"
        ],
        "summary": "\ud83d\udccb List Available Sources",
        "description": "Get all available media sources.",
        "operationId": "get_sources_sources__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Source not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/sources/{source}/preferences": {
      "get": {
        "tags": [
          "media-api"
        ],
        "summary": "\ud83d\udccb Get Source Configuration",
        "description": "Get configuration preferences for a specific source.",
        "operationId": "get_source_preferences_sources__source__preferences_get",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Source not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source}/popular": {
      "get": {
        "tags": [
          "media-api"
        ],
        "summary": "\ud83d\udd0d Get Popular Content",
        "description": "Get popular content with optional metadata enrichment.",
        "operationId": "get_popular_sources__source__popular_get",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_SearchResult_"
                }
              }
            }
          },
          "404": {
            "description": "Source not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source}/latest": {
      "get": {
        "tags": [
          "media-api"
        ],
        "summary": "\ud83d\udd0d Get Latest Updates",
        "description": "Get latest updates with optional metadata enrichment.",
        "operationId": "get_latest_updates_sources__source__latest_get",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_SearchResult_"
                }
              }
            }
          },
          "404": {
            "description": "Source not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source}/search": {
      "get": {
        "tags": [
          "media-api"
        ],
        "summary": "\ud83d\udd0d Search Content",
        "description": "Search for content with optional metadata enrichment.",
        "operationId": "search_content_sources__source__search_get",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "title": "Q"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Lang"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_SearchResult_"
                }
              }
            }
          },
          "404": {
            "description": "Source not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source}/videos": {
      "get": {
        "tags": [
          "media-api"
        ],
        "summary": "\ud83c\udfac Get Video Streaming Links",
        "description": "Get video sources.",
        "operationId": "get_video_sources_sources__source__videos_get",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Url"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Lang"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Source not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source}/series": {
      "get": {
        "tags": [
          "media-api"
        ],
        "summary": "\ud83d\udcfa Get Full Series Data",
        "description": "Get complete series data with hierarchical structure.",
        "operationId": "get_series_detail_sources__source__series_get",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesDetailResponse"
                }
              }
            }
          },
          "404": {
            "description": "Source not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source}/series/seasons": {
      "get": {
        "tags": [
          "media-api"
        ],
        "summary": "\ud83d\udcfa Get All Seasons",
        "description": "Get all seasons for a series.",
        "operationId": "get_series_seasons_sources__source__series_seasons_get",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeasonsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Source not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source}/series/seasons/{season_num}": {
      "get": {
        "tags": [
          "media-api"
        ],
        "summary": "\ud83d\udcfa Get Specific Season",
        "description": "Get details for a specific season.",
        "operationId": "get_series_season_sources__source__series_seasons__season_num__get",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          },
          {
            "name": "season_num",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Season Num"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeasonResponse"
                }
              }
            }
          },
          "404": {
            "description": "Source not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source}/series/seasons/{season_num}/episodes/{episode_num}": {
      "get": {
        "tags": [
          "media-api"
        ],
        "summary": "\ud83d\udcfa Get Specific Episode",
        "description": "Get details for a specific episode.",
        "operationId": "get_series_episode_sources__source__series_seasons__season_num__episodes__episode_num__get",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          },
          {
            "name": "season_num",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Season Num"
            }
          },
          {
            "name": "episode_num",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Episode Num"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EpisodeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Source not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source}/series/movies": {
      "get": {
        "tags": [
          "media-api"
        ],
        "summary": "\ud83d\udcfa Get All Movies/OVAs",
        "description": "Get all movies, OVAs, and specials for a series.",
        "operationId": "get_series_movies_sources__source__series_movies_get",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoviesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Source not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source}/series/movies/{movie_num}": {
      "get": {
        "tags": [
          "media-api"
        ],
        "summary": "\ud83d\udcfa Get Specific Movie/OVA",
        "description": "Get details for a specific movie, OVA, or special.",
        "operationId": "get_series_movie_sources__source__series_movies__movie_num__get",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          },
          {
            "name": "movie_num",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Movie Num"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovieResponse"
                }
              }
            }
          },
          "404": {
            "description": "Source not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/trailer": {
      "post": {
        "tags": [
          "media-api"
        ],
        "summary": "\ud83c\udfac Extract Streamable Trailer URL",
        "description": "Extract streamable URL from AniList or TMDB trailer data.\n\nTakes trailer information from AniList or TMDB responses, builds the full YouTube URL,\nand uses ytdlp_extractor to get the actual streamable URL.\n\nArgs:\n    request: TrailerRequest containing either anilist_trailer or tmdb_trailer data\n\nReturns:\n    TrailerResponse with streamable URL and metadata",
        "operationId": "extract_trailer_url_sources_trailer_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrailerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrailerResponse"
                }
              }
            }
          },
          "404": {
            "description": "Source not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/sources/status": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Sources Status",
        "description": "Get status of all sources.",
        "operationId": "get_sources_status_admin_sources_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/admin/cache/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Cache Stats",
        "description": "Get cache statistics.",
        "operationId": "get_cache_stats_admin_cache_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Cache Stats Admin Cache Stats Get"
                }
              }
            }
          }
        }
      }
    },
    "/admin/cache/clear/{prefix}": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Clear Cache Prefix",
        "description": "Clear cache entries with specific prefix.\n\nArgs:\n    prefix: Cache key prefix to clear (e.g., 'anilist_search', 'tmdb_details', 'endpoints:aniworld:*')",
        "operationId": "clear_cache_prefix_admin_cache_clear__prefix__post",
        "parameters": [
          {
            "name": "prefix",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Prefix"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Clear Cache Prefix Admin Cache Clear  Prefix  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/cache/clear/endpoint/{endpoint_path}": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Clear Cache Endpoint",
        "description": "Clear cache entries for a specific endpoint.\n\nArgs:\n    endpoint_path: Endpoint path to clear (e.g., 'aniworld/popular', 'anilist/search')",
        "operationId": "clear_cache_endpoint_admin_cache_clear_endpoint__endpoint_path__post",
        "parameters": [
          {
            "name": "endpoint_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Endpoint Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Clear Cache Endpoint Admin Cache Clear Endpoint  Endpoint Path  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/cache/flush": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Flush Cache",
        "description": "Flush all cache entries.",
        "operationId": "flush_cache_admin_cache_flush_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Flush Cache Admin Cache Flush Post"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Episode": {
        "properties": {
          "season": {
            "type": "integer",
            "title": "Season"
          },
          "episode": {
            "type": "integer",
            "title": "Episode"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "date_upload": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Upload"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "season",
          "episode",
          "title",
          "url"
        ],
        "title": "Episode",
        "description": "Episode information."
      },
      "EpisodeResponse": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "tmdb_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tmdb Data"
          },
          "anilist_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anilist Data"
          },
          "episode": {
            "$ref": "#/components/schemas/Episode"
          }
        },
        "type": "object",
        "required": [
          "type",
          "episode"
        ],
        "title": "EpisodeResponse",
        "description": "Response for single episode."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Movie": {
        "properties": {
          "number": {
            "type": "integer",
            "title": "Number"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "kind": {
            "$ref": "#/components/schemas/MovieKind"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "date_upload": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Upload"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "number",
          "title",
          "kind",
          "url"
        ],
        "title": "Movie",
        "description": "Movie/OVA/Special information."
      },
      "MovieKind": {
        "type": "string",
        "enum": [
          "movie",
          "ova",
          "special"
        ],
        "title": "MovieKind",
        "description": "Movie kind enumeration."
      },
      "MovieResponse": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "movie": {
            "$ref": "#/components/schemas/Movie"
          },
          "tmdb_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tmdb Data"
          },
          "anilist_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anilist Data"
          },
          "match_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Match Confidence"
          }
        },
        "type": "object",
        "required": [
          "type",
          "movie"
        ],
        "title": "MovieResponse",
        "description": "Response for single movie."
      },
      "MoviesResponse": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "movies": {
            "items": {
              "$ref": "#/components/schemas/Movie"
            },
            "type": "array",
            "title": "Movies"
          },
          "tmdb_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tmdb Data"
          },
          "anilist_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anilist Data"
          },
          "match_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Match Confidence"
          }
        },
        "type": "object",
        "required": [
          "type",
          "movies"
        ],
        "title": "MoviesResponse",
        "description": "Response for movies list."
      },
      "PaginatedResponse_SearchResult_": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "list": {
            "items": {
              "$ref": "#/components/schemas/SearchResult"
            },
            "type": "array",
            "title": "List"
          },
          "has_next_page": {
            "type": "boolean",
            "title": "Has Next Page",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "type",
          "list"
        ],
        "title": "PaginatedResponse[SearchResult]"
      },
      "SearchResult": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "link": {
            "type": "string",
            "title": "Link"
          },
          "tmdb_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tmdb Data",
            "description": "TMDB metadata (movie or TV show details)",
            "example": {
              "genres": [
                {
                  "id": 28,
                  "name": "Action"
                }
              ],
              "id": 12345,
              "media_type": "movie",
              "overview": "An example movie description",
              "poster_path": "/example.jpg",
              "release_date": "2023-01-01",
              "title": "Example Movie",
              "vote_average": 8.5
            }
          },
          "anilist_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anilist Data",
            "description": "AniList metadata (anime/manga details)",
            "example": {
              "averageScore": 85,
              "coverImage": {
                "large": "https://example.com/cover.jpg"
              },
              "description": "An example anime description",
              "episodes": 24,
              "genres": [
                "Action",
                "Adventure"
              ],
              "id": 67890,
              "title": {
                "english": "Example Anime",
                "romaji": "Example Anime",
                "userPreferred": "Example Anime"
              }
            }
          },
          "match_confidence": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Match Confidence",
            "description": "Confidence score of the metadata match (0.0 to 1.0)"
          }
        },
        "type": "object",
        "required": [
          "name",
          "image_url",
          "link"
        ],
        "title": "SearchResult",
        "description": "Search result item."
      },
      "Season": {
        "properties": {
          "season": {
            "type": "integer",
            "title": "Season"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "episodes": {
            "items": {
              "$ref": "#/components/schemas/Episode"
            },
            "type": "array",
            "title": "Episodes"
          }
        },
        "type": "object",
        "required": [
          "season"
        ],
        "title": "Season",
        "description": "Season information."
      },
      "SeasonResponse": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "tmdb_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tmdb Data"
          },
          "anilist_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anilist Data"
          },
          "season": {
            "$ref": "#/components/schemas/Season"
          }
        },
        "type": "object",
        "required": [
          "type",
          "season"
        ],
        "title": "SeasonResponse",
        "description": "Response for single season."
      },
      "SeasonsResponse": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "seasons": {
            "items": {
              "$ref": "#/components/schemas/Season"
            },
            "type": "array",
            "title": "Seasons"
          },
          "tmdb_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tmdb Data"
          },
          "anilist_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anilist Data"
          },
          "match_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Match Confidence"
          }
        },
        "type": "object",
        "required": [
          "type",
          "seasons"
        ],
        "title": "SeasonsResponse",
        "description": "Response for seasons list."
      },
      "SeriesDetail": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "seasons": {
            "items": {
              "$ref": "#/components/schemas/Season"
            },
            "type": "array",
            "title": "Seasons"
          },
          "movies": {
            "items": {
              "$ref": "#/components/schemas/Movie"
            },
            "type": "array",
            "title": "Movies"
          }
        },
        "type": "object",
        "required": [
          "slug"
        ],
        "title": "SeriesDetail",
        "description": "Hierarchical series detail with seasons and movies."
      },
      "SeriesDetailResponse": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "tmdb_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tmdb Data"
          },
          "anilist_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anilist Data"
          },
          "match_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Match Confidence"
          },
          "series": {
            "$ref": "#/components/schemas/SeriesDetail"
          }
        },
        "type": "object",
        "required": [
          "type",
          "series"
        ],
        "title": "SeriesDetailResponse",
        "description": "Response for hierarchical series detail."
      },
      "TrailerRequest": {
        "properties": {
          "anilist_trailer": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anilist Trailer"
          },
          "tmdb_trailer": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tmdb Trailer"
          }
        },
        "type": "object",
        "title": "TrailerRequest",
        "description": "Request model for trailer extraction."
      },
      "TrailerResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "original_url": {
            "type": "string",
            "title": "Original Url"
          },
          "streamable_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Streamable Url"
          },
          "quality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality"
          },
          "site": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Site"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "success",
          "original_url"
        ],
        "title": "TrailerResponse",
        "description": "Response for trailer extraction."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VideoListResponse": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "videos": {
            "items": {
              "$ref": "#/components/schemas/VideoSource"
            },
            "type": "array",
            "title": "Videos"
          }
        },
        "type": "object",
        "required": [
          "type",
          "videos"
        ],
        "title": "VideoListResponse",
        "description": "Response for video sources."
      },
      "VideoSource": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "original_url": {
            "type": "string",
            "title": "Original Url"
          },
          "quality": {
            "type": "string",
            "title": "Quality"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "host": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Host"
          },
          "requires_proxy": {
            "type": "boolean",
            "title": "Requires Proxy",
            "default": false
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers"
          },
          "subtitles": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitles"
          },
          "audios": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audios"
          }
        },
        "type": "object",
        "required": [
          "url",
          "original_url",
          "quality"
        ],
        "title": "VideoSource",
        "description": "Video source information."
      }
    }
  },
  "tags": [
    {
      "name": "media-api",
      "description": "Complete media streaming API with discovery, content management, and video sources"
    },
    {
      "name": "proxy",
      "description": "Video proxy endpoints for CORS handling and streaming"
    },
    {
      "name": "admin",
      "description": "Administrative endpoints for service management"
    }
  ]
}
